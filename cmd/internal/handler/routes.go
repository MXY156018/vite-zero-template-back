// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"github.com/zeromicro/go-zero/rest"
	"go-zero-template/cmd/internal/handler/apihandler"
	"go-zero-template/cmd/internal/handler/authorityhandler"
	"go-zero-template/cmd/internal/handler/autocodehandler"
	"go-zero-template/cmd/internal/handler/basehandler"
	"go-zero-template/cmd/internal/handler/casbinhandler"
	"go-zero-template/cmd/internal/handler/customerhandler"
	"go-zero-template/cmd/internal/handler/excelhandler"
	"go-zero-template/cmd/internal/handler/filehandler"
	"go-zero-template/cmd/internal/handler/menuhandler"
	"go-zero-template/cmd/internal/handler/simpleuploadhandler"
	sysdictionaryhandler "go-zero-template/cmd/internal/handler/sysdictionary"
	"go-zero-template/cmd/internal/handler/sysdictionarydetailhandler"
	"go-zero-template/cmd/internal/handler/sysoperationrecordhandler"
	"go-zero-template/cmd/internal/handler/systemhandler"
	"go-zero-template/cmd/internal/handler/userhandler"
	"go-zero-template/cmd/internal/svc"
	"net/http"
	"strings"
)

func RegisterHandlers(engine *rest.Server, serverCtx *svc.ServiceContext) {
	basehandler.RegisterHandlersAutocode(engine, serverCtx)
	userhandler.RegisterHandlersAutocode(engine, serverCtx)
	menuhandler.RegisterHandlersAutocode(engine, serverCtx)
	apihandler.RegisterHandlersAutocode(engine, serverCtx)
	systemhandler.RegisterHandlersAutocode(engine, serverCtx)
	casbinhandler.RegisterHandlersAutocode(engine, serverCtx)
	autocodehandler.RegisterHandlersAutocode(engine, serverCtx)
	authorityhandler.RegisterHandlersAutocode(engine, serverCtx)
	sysdictionaryhandler.RegisterHandlersAutocode(engine, serverCtx)
	sysoperationrecordhandler.RegisterHandlersAutocode(engine, serverCtx)
	sysdictionarydetailhandler.RegisterHandlersAutocode(engine, serverCtx)
	filehandler.RegisterHandlersAutocode(engine, serverCtx)
	excelhandler.RegisterHandlersAutocode(engine, serverCtx)
	simpleuploadhandler.RegisterHandlersAutocode(engine, serverCtx)
	customerhandler.RegisterHandlersAutocode(engine, serverCtx)

	dirlevel := []string{":1", ":2", ":3", ":4", ":5", ":6", ":7", ":8", ":9", ":10", ":11", ":12", ":13", ":14", ":15"}
	patern := "/resource/"
	dirpath := "./resource/"
	for i := 1; i < len(dirlevel); i++ {
		path := "/" + strings.Join(dirlevel[:i], "/")
		//最后生成 /asset
		engine.AddRoute(
			rest.Route{
				Method:  http.MethodGet,
				Path:    path,
				Handler: dirhandler(patern, dirpath),
			})
	}

}
func Filehandler(filepath string) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		http.ServeFile(w, r, filepath)
	}
}
func dirhandler(patern, filedir string) http.HandlerFunc {
	return func(w http.ResponseWriter, req *http.Request) {
		handler := http.StripPrefix(patern, http.FileServer(http.Dir(filedir)))
		handler.ServeHTTP(w, req)
	}
}
